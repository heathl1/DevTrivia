Index: devtrivia/target/classes/static/game.html
===================================================================
diff --git a/devtrivia/target/classes/static/game.html b/devtrivia/target/classes/static/game.html
deleted file mode 100644
--- a/devtrivia/target/classes/static/game.html	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,97 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8" />
-  <title>DevTrivia – Game</title>
-
-  <!-- This page shows the simple trivia game screen for my DevTrivia project. -->
-  <!-- It will load one question from my Java server when the page finishes loading. -->
-  <!-- I am keeping the layout very basic on purpose since this is an early prototype. -->
-</head>
-
-<body>
-<!-- This is the title with a link back to the home page so I can navigate easily. -->
-<h1><a href="index.html">DevTrivia</a></h1>
-
-<!-- This container is where I will inject the question, choices, and a result message. -->
-<div id="app"><p>Loading question...</p></div>
-
-<!-- This script contains the logic that fetches the question and handles user interaction. -->
-<script>
-  // I am waiting for the DOM to be fully loaded before I run any of my code.
-  document.addEventListener('DOMContentLoaded', async () => {
-    // This references the main content area where I will display the question and choices.
-    const root = document.getElementById('app');
-
-    try {
-      // I am requesting JSON data from the server endpoint that returns trivia questions.
-      // Because I used a relative path (/questions), it will call the same host and port that served this page.
-      const res = await fetch('/questions');
-
-      // If the server response is not OK (like 404 or 500), I will throw an error to handle below.
-      if (!res.ok) throw new Error('HTTP ' + res.status);
-
-      // I am converting the response body into a JavaScript array of questions.
-      const questions = await res.json();
-
-      // For this demo, I will use the first question in the array.
-      const q = questions[0];
-
-
-      // I am replacing the loading message with the question UI.
-      // It includes the question text, a list of choices with radio buttons, a submit button, and a result area.
-
-      root.innerHTML = `
-        <h2>${q.question_text}</h2>
-        <ol id="choices"></ol>
-        <button id="submit" disabled>Submit</button>
-        <p id="result"></p>
-      `;
-
-
-
-      // Here I am grabbing references to the choice list, the submit button, and the result paragraph.
-      const choicesEl = document.getElementById('choices');
-      const submit = document.getElementById('submit');
-      const result = document.getElementById('result');
-
-      // I am creating one list item per possible answer and adding a radio button for selection.
-      q.choices.forEach((c, i) => {
-        const li = document.createElement('li');
-        li.innerHTML = `<label><input type="radio" name="ans" value="${i}"> ${c}</label>`;
-        choicesEl.appendChild(li);
-      });
-
-      // Once any radio button is selected, I will enable the Submit button.
-      choicesEl.addEventListener('change', () => { submit.disabled = false; });
-
-      // When the user clicks Submit, I will check whether their selected index matches the correct answer index.
-      submit.addEventListener('click', () => {
-        // This finds whichever radio button is currently selected.
-        const sel = document.querySelector('input[name="ans"]:checked');
-
-        // I will convert the selected value (which is a string) into a number so I can compare it easily.
-        const idx = parseInt(sel.value, 10);
-
-        // If the chosen index is the same as the correct index, I will show a success message.
-        // Otherwise, I will display which choice was actually correct.
-        if (idx === q.answerIndex) {
-          result.textContent = "✅ Correct! Nice job.";
-        } else {
-          result.textContent = `❌ Not quite. Correct answer: ${q.choices[q.answerIndex]}`;
-        }
-
-        // I am disabling the button so the user cannot submit multiple times for the same question.
-        submit.disabled = true;
-      });
-
-    } catch (e) {
-      // If anything goes wrong (for example, the server is not running), I will show an error message on the page.
-      // This helps me diagnose problems without opening the browser console.
-      root.innerHTML = `<p>Failed to load question: ${e}</p>
-                        <p>Please make sure the server is running and try opening <code>/questions</code> directly.</p>`;
-    }
-  });
-</script>
-</body>
-</html>
\ No newline at end of file
Index: devtrivia/src/main/java/com/example/devtrivia/repository/AnswerRepository.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/repository/AnswerRepository.java b/devtrivia/src/main/java/com/example/devtrivia/repository/AnswerRepository.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/repository/AnswerRepository.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,4 +0,0 @@
-package com.example.devtrivia.repository;
-
-public interface AnswerRepository {
-}
Index: devtrivia/pom.xml
===================================================================
diff --git a/devtrivia/pom.xml b/devtrivia/pom.xml
deleted file mode 100644
--- a/devtrivia/pom.xml	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,95 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <parent>
-        <groupId>org.springframework.boot</groupId>
-        <artifactId>spring-boot-starter-parent</artifactId>
-        <version>3.5.6</version>
-        <relativePath/> <!-- lookup parent from repository -->
-    </parent>
-    <groupId>com.example</groupId>
-    <artifactId>devtrivia</artifactId>
-    <version>0.0.1-SNAPSHOT</version>
-    <name>devtrivia</name>
-    <description>devtrivia</description>
-    <url/>
-    <licenses>
-        <license/>
-    </licenses>
-    <developers>
-        <developer/>
-    </developers>
-    <scm>
-        <connection/>
-        <developerConnection/>
-        <tag/>
-        <url/>
-    </scm>
-    <properties>
-        <java.version>17</java.version>
-    </properties>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jpa</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-thymeleaf</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-web</artifactId>
-        </dependency>
-
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-devtools</artifactId>
-            <scope>runtime</scope>
-            <optional>true</optional>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-test</artifactId>
-            <scope>test</scope>
-        </dependency>
-        <!-- Enables MySQL database connection -->
-        <dependency>
-            <groupId>com.mysql</groupId>
-            <artifactId>mysql-connector-j</artifactId>
-            <version>8.0.32</version> <!-- Replace with the desired version -->
-        </dependency>
-
-        <!-- Adds validation support for entity classes -->
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-validation</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>jakarta.validation</groupId>
-            <artifactId>jakarta.validation-api</artifactId>
-            <version>3.0.2</version> <!-- Use the appropriate version -->
-        </dependency>
-        <!-- Bean Validation API Reference Implementation (e.g., Hibernate Validator) -->
-        <dependency>
-            <groupId>org.hibernate</groupId>
-            <artifactId>hibernate-validator</artifactId>
-            <version>8.0.1.Final</version> <!-- Use the appropriate version -->
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.boot</groupId>
-            <artifactId>spring-boot-starter-data-jdbc</artifactId>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.springframework.boot</groupId>
-                <artifactId>spring-boot-maven-plugin</artifactId>
-            </plugin>
-        </plugins>
-    </build>
-
-</project>
Index: devtrivia/target/classes/static/index.html
===================================================================
diff --git a/devtrivia/target/classes/static/index.html b/devtrivia/target/classes/static/index.html
deleted file mode 100644
--- a/devtrivia/target/classes/static/index.html	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,45 +0,0 @@
-<!doctype html>
-<html class="no-js" lang="">
-<head>
-    <meta charset="utf-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-
-    <title>DevTrivia – Home</title>
-
-    <!-- This page is the main starting point for my DevTrivia project. -->
-    <!-- I am keeping it simple with just a title, a short tagline, and two buttons for navigation. -->
-
-    <!-- I am linking to my CSS file here so I can style the page later if I want. -->
-    <link rel="stylesheet" href="css/style.css">
-
-    <!-- I am setting a theme color for the browser tab area, just to make it look nicer. -->
-    <meta name="theme-color" content="#fafafa">
-</head>
-
-<body>
-<!-- This is the main title of my web app. I want it to be the first thing people see. -->
-<h1>DevTrivia</h1>
-
-<!-- This is a short line to describe what my app is about. -->
-<p>Are you smarter than a Senior Dev?</p>
-
-<!-- I am using two forms with buttons to simulate basic navigation for now. -->
-<!-- The first form is for logging in, but it does not do anything yet because this is just a prototype. -->
-<form action="index.html">
-    <button type="submit">Log In</button>
-</form>
-
-<!-- I added this div with a height value so there is space between the buttons. -->
-<div style="height: 25px;"></div>
-
-<!-- This second form sends the player to the game page. -->
-<!-- When the player clicks Play, the browser will go to game.html where the question appears. -->
-<form action="game.html">
-    <button type="submit">Play</button>
-</form>
-
-<!-- Everything below this point could be expanded later when we add user accounts, -->
-<!-- login functionality, and maybe difficulty levels or categories. -->
-<!-- For now, this page just helps me test navigation between files. -->
-</body>
-</html>
\ No newline at end of file
Index: devtrivia/src/main/resources/static/index.html
===================================================================
diff --git a/devtrivia/src/main/resources/static/index.html b/devtrivia/src/main/resources/static/index.html
deleted file mode 100644
--- a/devtrivia/src/main/resources/static/index.html	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,45 +0,0 @@
-<!doctype html>
-<html class="no-js" lang="">
-<head>
-    <meta charset="utf-8">
-    <meta name="viewport" content="width=device-width, initial-scale=1">
-
-    <title>DevTrivia – Home</title>
-
-    <!-- This page is the main starting point for my DevTrivia project. -->
-    <!-- I am keeping it simple with just a title, a short tagline, and two buttons for navigation. -->
-
-    <!-- I am linking to my CSS file here so I can style the page later if I want. -->
-    <link rel="stylesheet" href="css/style.css">
-
-    <!-- I am setting a theme color for the browser tab area, just to make it look nicer. -->
-    <meta name="theme-color" content="#fafafa">
-</head>
-
-<body>
-<!-- This is the main title of my web app. I want it to be the first thing people see. -->
-<h1>DevTrivia</h1>
-
-<!-- This is a short line to describe what my app is about. -->
-<p>Are you smarter than a Senior Dev?</p>
-
-<!-- I am using two forms with buttons to simulate basic navigation for now. -->
-<!-- The first form is for logging in, but it does not do anything yet because this is just a prototype. -->
-<form action="index.html">
-    <button type="submit">Log In</button>
-</form>
-
-<!-- I added this div with a height value so there is space between the buttons. -->
-<div style="height: 25px;"></div>
-
-<!-- This second form sends the player to the game page. -->
-<!-- When the player clicks Play, the browser will go to game.html where the question appears. -->
-<form action="game.html">
-    <button type="submit">Play</button>
-</form>
-
-<!-- Everything below this point could be expanded later when we add user accounts, -->
-<!-- login functionality, and maybe difficulty levels or categories. -->
-<!-- For now, this page just helps me test navigation between files. -->
-</body>
-</html>
\ No newline at end of file
Index: devtrivia/src/main/resources/static/game.html
===================================================================
diff --git a/devtrivia/src/main/resources/static/game.html b/devtrivia/src/main/resources/static/game.html
deleted file mode 100644
--- a/devtrivia/src/main/resources/static/game.html	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,97 +0,0 @@
-<!DOCTYPE html>
-<html lang="en">
-<head>
-  <meta charset="UTF-8" />
-  <title>DevTrivia – Game</title>
-
-  <!-- This page shows the simple trivia game screen for my DevTrivia project. -->
-  <!-- It will load one question from my Java server when the page finishes loading. -->
-  <!-- I am keeping the layout very basic on purpose since this is an early prototype. -->
-</head>
-
-<body>
-<!-- This is the title with a link back to the home page so I can navigate easily. -->
-<h1><a href="index.html">DevTrivia</a></h1>
-
-<!-- This container is where I will inject the question, choices, and a result message. -->
-<div id="app"><p>Loading question...</p></div>
-
-<!-- This script contains the logic that fetches the question and handles user interaction. -->
-<script>
-  // I am waiting for the DOM to be fully loaded before I run any of my code.
-  document.addEventListener('DOMContentLoaded', async () => {
-    // This references the main content area where I will display the question and choices.
-    const root = document.getElementById('app');
-
-    try {
-      // I am requesting JSON data from the server endpoint that returns trivia questions.
-      // Because I used a relative path (/questions), it will call the same host and port that served this page.
-      const res = await fetch('/questions');
-
-      // If the server response is not OK (like 404 or 500), I will throw an error to handle below.
-      if (!res.ok) throw new Error('HTTP ' + res.status);
-
-      // I am converting the response body into a JavaScript array of questions.
-      const questions = await res.json();
-
-      // For this demo, I will use the first question in the array.
-      const q = questions[0];
-
-
-      // I am replacing the loading message with the question UI.
-      // It includes the question text, a list of choices with radio buttons, a submit button, and a result area.
-
-      root.innerHTML = `
-        <h2>${q.question_text}</h2>
-        <ol id="choices"></ol>
-        <button id="submit" disabled>Submit</button>
-        <p id="result"></p>
-      `;
-
-
-
-      // Here I am grabbing references to the choice list, the submit button, and the result paragraph.
-      const choicesEl = document.getElementById('choices');
-      const submit = document.getElementById('submit');
-      const result = document.getElementById('result');
-
-      // I am creating one list item per possible answer and adding a radio button for selection.
-      q.choices.forEach((c, i) => {
-        const li = document.createElement('li');
-        li.innerHTML = `<label><input type="radio" name="ans" value="${i}"> ${c}</label>`;
-        choicesEl.appendChild(li);
-      });
-
-      // Once any radio button is selected, I will enable the Submit button.
-      choicesEl.addEventListener('change', () => { submit.disabled = false; });
-
-      // When the user clicks Submit, I will check whether their selected index matches the correct answer index.
-      submit.addEventListener('click', () => {
-        // This finds whichever radio button is currently selected.
-        const sel = document.querySelector('input[name="ans"]:checked');
-
-        // I will convert the selected value (which is a string) into a number so I can compare it easily.
-        const idx = parseInt(sel.value, 10);
-
-        // If the chosen index is the same as the correct index, I will show a success message.
-        // Otherwise, I will display which choice was actually correct.
-        if (idx === q.answerIndex) {
-          result.textContent = "✅ Correct! Nice job.";
-        } else {
-          result.textContent = `❌ Not quite. Correct answer: ${q.choices[q.answerIndex]}`;
-        }
-
-        // I am disabling the button so the user cannot submit multiple times for the same question.
-        submit.disabled = true;
-      });
-
-    } catch (e) {
-      // If anything goes wrong (for example, the server is not running), I will show an error message on the page.
-      // This helps me diagnose problems without opening the browser console.
-      root.innerHTML = `<p>Failed to load question: ${e}</p>
-                        <p>Please make sure the server is running and try opening <code>/questions</code> directly.</p>`;
-    }
-  });
-</script>
-</body>
-</html>
\ No newline at end of file
Index: devtrivia/src/test/java/com/example/devtrivia/DevtriviaApplicationTests.java
===================================================================
diff --git a/devtrivia/src/test/java/com/example/devtrivia/DevtriviaApplicationTests.java b/devtrivia/src/test/java/com/example/devtrivia/DevtriviaApplicationTests.java
deleted file mode 100644
--- a/devtrivia/src/test/java/com/example/devtrivia/DevtriviaApplicationTests.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,13 +0,0 @@
-package src.test.java.com.example.devtrivia;
-
-import org.junit.jupiter.api.Test;
-//import org.springframework.boot.test.context.SpringBootTest;
-
-//@SpringBootTest
-class DevtriviaApplicationTests {
-
-    @Test
-    void contextLoads() {
-    }
-
-}
Index: devtrivia/target/classes/application.properties
===================================================================
diff --git a/devtrivia/target/classes/application.properties b/devtrivia/target/classes/application.properties
deleted file mode 100644
--- a/devtrivia/target/classes/application.properties	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,14 +0,0 @@
-spring.application.name=devtrivia
-spring.datasource.url=jdbc:mysql://localhost:3306/DevTrivia
-spring.datasource.username=root
-spring.datasource.password=mysql123
-spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
-
-spring.jpa.hibernate.ddl-auto=update
-spring.jpa.show-sql=true
-spring.jpa.properties.hibernate.format_sql=true
-
-spring.datasource.hikari.maximum-pool-size=10
-spring.datasource.hikari.minimum-idle=2
-spring.datasource.hikari.idle-timeout=30000
-spring.datasource.hikari.max-lifetime=1800000
\ No newline at end of file
Index: devtrivia/src/main/java/com/example/devtrivia/controller/AnswerController.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/controller/AnswerController.java b/devtrivia/src/main/java/com/example/devtrivia/controller/AnswerController.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/controller/AnswerController.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,18 +0,0 @@
-package com.example.devtrivia.controller;
-import com.example.devtrivia.repository.AnswerRepository;
-import org.springframework.web.bind.annotation.*;
-import com.example.devtrivia.repository.QuestionRepository;
-import com.example.devtrivia.model.Question;
-//jakarta.validation.constraints.*;
-//javax.validation.constraints.*;
-import java.util.List;
-
-@RestController
-@RequestMapping("/answers")
-public class AnswerController {
-    private final AnswerRepository repository;
-
-    public AnswerController(AnswerRepository repository) {
-        this.repository = repository;
-    }
-}
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,4 +0,0 @@
-<h1>Welcome to DevTrivia!</h1>
-<p>Contributers : Mitchel Morgan Kelli Barclay Layla Heath</p>
-Our project is a web‑based Trivia Challenge Game designed to be fast, fun, and social. Players can jump in as guests or register to save progress, compete on leaderboards, and view a personal dashboard. Gameplay features three difficulty levels and multiple categories. We are building the application in Java using Spring Boot, with a responsive front end and a relational database to persist users, questions, results, and game sessions.
-
Index: devtrivia/src/main/java/com/example/devtrivia/model/Question.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/model/Question.java b/devtrivia/src/main/java/com/example/devtrivia/model/Question.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/model/Question.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,64 +0,0 @@
-package com.example.devtrivia.model;
-import jakarta.persistence.*;
-import org.antlr.v4.runtime.misc.NotNull;
-
-/*
-import jakarta.validation.constraints.Min;
-import jakarta.validation.constraints.NotNull;
-import jakarta.validation.constraints.Size;
- */
-@Entity
-public class Question {
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    @Column(name = "question_id")
-    private int question_id;
-
-    @NotNull
-    @Column(name = "question_text")
-    private String question_text;
-
-    public enum level { Easy, Medium, Hard}
-    @NotNull
-    @Column(name = "difficulty_level")
-    private level difficulty_level;
-
-    @NotNull
-    @Column(name = "category_id")
-    private int category_id;
-
-    // getters and setters
-
-    public int getQuestionId() {
-        return question_id;
-    }
-
-    public void setQuestionId(int questionId) {
-        this.question_id = questionId;
-    }
-
-    public String getQuestionText() {
-        return question_text;
-    }
-
-    public void setQuestionText(String text) {
-        this.question_text = question_text;
-    }
-
-    public level getDifficultyLevel() {
-        return this.difficulty_level;
-    }
-
-    public void setDifficultyLevel(level difficulty_level) {
-        this.difficulty_level = difficulty_level;
-    }
-
-    public int getCategoryId() {
-        return this.category_id;
-    }
-
-    public void setCategoryId(int category_id) {
-        this.category_id = category_id;
-    }
-
-}
Index: devtrivia/HELP.md
===================================================================
diff --git a/devtrivia/HELP.md b/devtrivia/HELP.md
deleted file mode 100644
--- a/devtrivia/HELP.md	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,33 +0,0 @@
-# Getting Started
-
-### Reference Documentation
-
-For further reference, please consider the following sections:
-
-* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
-* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/3.5.6/maven-plugin)
-* [Create an OCI image](https://docs.spring.io/spring-boot/3.5.6/maven-plugin/build-image.html)
-* [Spring Data JPA](https://docs.spring.io/spring-boot/3.5.6/reference/data/sql.html#data.sql.jpa-and-spring-data)
-* [Spring Boot DevTools](https://docs.spring.io/spring-boot/3.5.6/reference/using/devtools.html)
-* [Thymeleaf](https://docs.spring.io/spring-boot/3.5.6/reference/web/servlet.html#web.servlet.spring-mvc.template-engines)
-* [Spring Web](https://docs.spring.io/spring-boot/3.5.6/reference/web/servlet.html)
-
-### Guides
-
-The following guides illustrate how to use some features concretely:
-
-* [Accessing Data with JPA](https://spring.io/guides/gs/accessing-data-jpa/)
-* [Accessing data with MySQL](https://spring.io/guides/gs/accessing-data-mysql/)
-* [Handling Form Submission](https://spring.io/guides/gs/handling-form-submission/)
-* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)
-* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)
-* [Building REST services with Spring](https://spring.io/guides/tutorials/rest/)
-
-### Maven Parent overrides
-
-Due to Maven's design, elements are inherited from the parent POM to the project POM.
-While most of the inheritance is fine, it also inherits unwanted elements like `<license>` and `<developers>` from the
-parent.
-To prevent this, the project POM contains empty overrides for these elements.
-If you manually switch to a different parent and actually want the inheritance, you need to remove those overrides.
-
Index: devtrivia/src/main/java/com/example/devtrivia/controller/QuestionController.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/controller/QuestionController.java b/devtrivia/src/main/java/com/example/devtrivia/controller/QuestionController.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/controller/QuestionController.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,49 +0,0 @@
-package com.example.devtrivia.controller;
-import org.springframework.web.bind.annotation.*;
-import com.example.devtrivia.repository.QuestionRepository;
-import com.example.devtrivia.model.Question;
-//jakarta.validation.constraints.*;
-//javax.validation.constraints.*;
-import java.util.List;
-
-@RestController
-@RequestMapping("/questions")
-public class QuestionController {
-    private final QuestionRepository repository;
-
-    public QuestionController(QuestionRepository repository) {
-        this.repository = repository;
-    }
-
-    @PostMapping
-    public Question createQuestion(/*@Valid*/ @RequestBody Question question) {
-        return repository.save(question);
-    }
-
-    @GetMapping
-    public List<Question> getAllQuestions() {
-        return repository.findAll();
-    }
-
-    @GetMapping("/{id}")
-    public Question getQuestionById(@PathVariable Long id) {
-        return repository.findById(id).orElseThrow(() -> new RuntimeException("Question not found"));
-    }
-
-    @PutMapping("/{id}")
-    public Question updateQuestion(@PathVariable Long id, /*@Valid*/ @RequestBody Question updatedQuestion) {
-        return repository.findById(id)
-                .map(question -> {
-                    question.setQuestionText(updatedQuestion.getQuestionText());
-                    question.setDifficultyLevel(updatedQuestion.getDifficultyLevel());
-                    question.setCategoryId(updatedQuestion.getCategoryId());
-                    return repository.save(question);
-                })
-                .orElseThrow(() -> new RuntimeException("Question not found"));
-    }
-
-    @DeleteMapping("/{id}")
-    public void deleteQuestion(@PathVariable Long id) {
-        repository.deleteById(id);
-    }
-}
Index: devtrivia/src/main/java/com/example/devtrivia/model/Answer.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/model/Answer.java b/devtrivia/src/main/java/com/example/devtrivia/model/Answer.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/model/Answer.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,56 +0,0 @@
-package com.example.devtrivia.model;
-import jakarta.persistence.*;
-import org.antlr.v4.runtime.misc.NotNull;
-
-/*
-answer_id
-question_id
-answer_text
-is_correct
-display_order
- */
-
-@Entity
-public class Answer {
-
-    @Id
-    @GeneratedValue(strategy = GenerationType.IDENTITY)
-    @Column(name = "answer_id")
-    private int answer_id;
-
-    @Column(name = "question_id")
-    private int question_id;
-
-    @Column(name = "answer_text")
-    private String answer_text;
-
-    @Column(name = "is_correct")
-    private boolean is_correct;
-
-    @Column(name = "display_order")
-    private int display_order;
-
-    // getters
-    public int getAnswerId() {
-        return this.answer_id;
-    }
-
-    public int getQuestionId() {
-        return this.question_id;
-    }
-
-    public String getQuestionText() {
-        return this.answer_text;
-    }
-
-    public boolean getIsCorrect() {
-        return this.is_correct;
-    }
-
-    public int getDisplayOrder() {
-        return this.display_order;
-    }
-
-    //setters
-
-}
Index: devtrivia/src/main/resources/application.properties
===================================================================
diff --git a/devtrivia/src/main/resources/application.properties b/devtrivia/src/main/resources/application.properties
deleted file mode 100644
--- a/devtrivia/src/main/resources/application.properties	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,14 +0,0 @@
-spring.application.name=devtrivia
-spring.datasource.url=jdbc:mysql://localhost:3306/DevTrivia
-spring.datasource.username=root
-spring.datasource.password=mysql123
-spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
-
-spring.jpa.hibernate.ddl-auto=update
-spring.jpa.show-sql=true
-spring.jpa.properties.hibernate.format_sql=true
-
-spring.datasource.hikari.maximum-pool-size=10
-spring.datasource.hikari.minimum-idle=2
-spring.datasource.hikari.idle-timeout=30000
-spring.datasource.hikari.max-lifetime=1800000
\ No newline at end of file
Index: devtrivia/src/main/java/com/example/devtrivia/repository/QuestionRepository.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/repository/QuestionRepository.java b/devtrivia/src/main/java/com/example/devtrivia/repository/QuestionRepository.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/repository/QuestionRepository.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,8 +0,0 @@
-package com.example.devtrivia.repository;
-import org.springframework.data.jpa.repository.JpaRepository;
-import com.example.devtrivia.model.Question;
-
-
-public interface QuestionRepository extends JpaRepository <Question, Long> {
-
-}
Index: devtrivia/src/main/java/com/example/devtrivia/DevtriviaApplication.java
===================================================================
diff --git a/devtrivia/src/main/java/com/example/devtrivia/DevtriviaApplication.java b/devtrivia/src/main/java/com/example/devtrivia/DevtriviaApplication.java
deleted file mode 100644
--- a/devtrivia/src/main/java/com/example/devtrivia/DevtriviaApplication.java	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
+++ /dev/null	(revision 94529e9ae298cc6048e3c41728ccbaeed6f68a4c)
@@ -1,13 +0,0 @@
-package com.example.devtrivia;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-
-@SpringBootApplication
-public class DevtriviaApplication {
-
-    public static void main(String[] args) {
-        SpringApplication.run(DevtriviaApplication.class, args);
-    }
-
-}
